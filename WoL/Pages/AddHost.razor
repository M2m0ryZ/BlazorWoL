@page "/AddHost"

@using WoL.Data
@using WoL.Models
@using WoL.Models.ViewModels
@using WoL.Services
@using WoL.Extensions
@inject IHostService HostService
@inject IAddressLookupService AddressService
@inject NavigationManager NavigationManager

<h3>Add Host</h3>

<hr />
<div class="row">
    <div class="col-lg-3">
        <EditForm Model="@model" OnValidSubmit="@HandleValidSubmit">
                @if (!string.IsNullOrEmpty(Alert))
                {
                    <div class="alert alert-danger">@Alert</div>
                }
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Host.Caption" class="control-label">Title</label>
                <InputText @bind-Value="model.Caption" class="form-control" />
                <span asp-validation-for="Host.Caption" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Host.Hostname" class="control-label">Host name</label>
                <InputText @bind-Value="model.Hostname" class="form-control" />
                <span asp-validation-for="Host.Hostname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Host.MacAddress" class="control-label">Mac address</label>
                <InputText @bind-Value="model.MacAddress" class="form-control" />
                <span asp-validation-for="Host.MacAddress" class="text-danger"></span>
            </div>
                <div class="form-group">
                    @if (Creating)
                    {
                        <button class="btn btn-primary" type="button" disabled>
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                            Creating...
                        </button>
                    }
                    else
                    {
                        <input type="submit" value="Create" class="btn btn-primary" />
                    }
                </div>
        </EditForm>
    </div>
</div>

<div>
    <a href="">
        Back to List
    </a>
</div>

@code {
    AddHostViewModel model = new AddHostViewModel();
    string Alert = null;
    bool Creating = false;

    private Host GetMacHost()
    {
        var mac = model.MacAddress.ParseMacAddress();
        return new Host()
        {
            Caption = model.Caption,
            MacAddress = mac
        };
    }

    private async Task<Host> GetHostByName()
    {
        (var ip, var name) = await AddressService.GetIpAndName(model.Hostname);
        var mac = (await AddressService.GetMac(ip)).GetAddressBytes();
        return new Host()
        {
            Caption = model.Caption,
            Hostname = name,
            MacAddress = mac
        };
    }

    private async Task<Host> GetHost()
    {
        if (!string.IsNullOrEmpty(model.MacAddress))
            return GetMacHost();
        return await GetHostByName();
    }

    private async Task HandleValidSubmit(EditContext context)
    {
        Creating = true;
        Host host;
        try
        {
            host = await GetHost();
        }
        catch
        {
            Alert = "This hostname or it's mac address could not be found.";
            Creating = false;
            return;
        }
        try
        {
            await HostService.Add(host);
        }
        catch (IHostService.DuplicateEntryException duplEx)
        {
            Alert = $"Creation failed as an entry with {duplEx.Field.ToLower()} '{duplEx.Value}' does already exists.";
            Creating = false;
            return;
        }
        catch
        {
            Alert = "This entry could not be created. Maybe a similar entry which shares some of the entered values does already exist. Please contact the administrator.";
            Creating = false;
            return;
        }
        NavigationManager.NavigateTo("/");
    }
}
